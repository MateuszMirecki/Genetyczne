Generation: 1, Best fitness: -200, Program: write ( True ) read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 2, Best fitness: -200, Program: write ( B3 ) read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 3, Best fitness: -200, Program: B3 = ! ! True read ( X1 ) write ( X1 + X4 ) read ( X2 ) read ( X2 ) write ( ( X5 + X5 ) ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 4, Best fitness: -200, Program: B1 = B3 read ( X1 ) B2 = False read ( X2 ) read ( X4 ) write ( X2 + X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 5, Best fitness: -200, Program: B1 = B3 read ( X1 ) B2 = False read ( X1 ) read ( X4 ) write ( X2 + X1 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 6, Best fitness: -200, Program: write ( ( X5 + X5 ) ) B3 = ! ! True , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 7, Best fitness: -200, Program: write ( X4 >= ( 337 ) ) read ( X4 ) write ( ( X5 + X5 ) ) read ( X4 ) read ( X2 ) write ( X4 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 8, Best fitness: -200, Program: B1 = B3 read ( X4 ) write ( X1 + X4 ) write ( X4 / X2 ) B1 = B3 write ( X1 + X4 >= ( 337 ) ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 9, Best fitness: -200, Program: write ( X4 / X2 ) read ( X4 ) if ( True && 627 <= 52 ) { read ( X4 ) } read ( X4 ) read ( X2 ) write ( X4 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 10, Best fitness: -200, Program: if ( ( 959 == 751 ) ) { X2 = 475 } read ( X4 ) if ( True && 627 <= 52 ) { read ( X4 ) } read ( X4 ) read ( X2 ) write ( X4 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 11, Best fitness: -200, Program: write ( X5 + X5 ) read ( X4 ) while ( True ) { } read ( X4 ) while ( ( 23 ) > ( 857 ) ) { if ( True ) { read ( X4 ) } if ( False ) { } } write ( X4 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 12, Best fitness: -200, Program: B2 = False read ( X2 ) write ( X4 ) read ( X4 ) while ( X5 + X4 > X3 + X2 ) { read ( X3 ) } write ( X4 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 13, Best fitness: -200, Program: write ( X4 ) read ( X3 ) if ( ! False && 627 <= 52 ) { read ( X4 ) } read ( X2 ) while ( X2 + X3 < X1 ) { X4 = 333 if ( False ) { } while ( True ) { } read ( X1 ) } while ( ( False ) ) { read ( B2 ) write ( False ) while ( True ) { } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 14, Best fitness: -200, Program: write ( X4 ) read ( X3 ) if ( ! False && 627 <= 52 ) { read ( X4 ) } read ( X2 ) while ( X2 + X3 < X1 ) { X4 = 333 if ( False ) { } while ( True ) { } read ( X1 ) } while ( ( False ) ) { read ( B2 ) write ( False ) while ( True ) { } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 15, Best fitness: -200, Program: write ( X4 ) B1 = False if ( ! False && 627 <= 52 ) { read ( X4 ) } read ( X4 ) read ( X4 ) while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( True ) { } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 16, Best fitness: -200, Program: write ( False ) while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( True ) { } } if ( 357 >= 260 && 627 <= 52 ) { read ( X4 ) } read ( X2 ) while ( X2 + X3 < X1 ) { X4 = 333 if ( False ) { } while ( True ) { } read ( X1 ) } while ( True ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 17, Best fitness: -200, Program: write ( False ) while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( True ) { } } if ( 357 >= 260 && 627 <= 52 ) { read ( X4 ) } read ( X2 ) while ( X2 + X3 < X1 ) { X4 = 333 if ( False ) { } while ( True ) { } read ( X1 ) } while ( True ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 18, Best fitness: -200, Program: if ( True ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } read ( X4 ) while ( False ) { while ( True ) { } while ( False ) { read ( X1 ) } if ( True ) { } write ( 762 ) X3 = 739 while ( False ) { read ( X3 ) } } read ( X4 ) if ( True ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 19, Best fitness: -200, Program: if ( False ) { read ( X1 ) } read ( X2 ) if ( False ) { X2 = 475 } X3 = X1 + X5 if ( False ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } write ( X4 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 20, Best fitness: -200, Program: write ( False ) while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( True ) { } } if ( 357 >= 260 && 627 <= 52 ) { read ( X4 ) } read ( X4 ) while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( False ) { read ( X1 ) } } while ( True ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 21, Best fitness: -200, Program: write ( False ) while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( True ) { } } if ( 357 >= 260 && 627 <= 52 ) { read ( X4 ) } read ( X4 ) while ( ( B2 ) ) { read ( B2 ) write ( False ) while ( False ) { read ( X1 ) } } while ( True ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 22, Best fitness: -200, Program: write ( False ) while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( True ) { } } if ( False ) { read ( X1 ) } B3 = False while ( ( B3 ) ) { read ( B2 ) write ( False ) while ( True ) { } } while ( False ) { while ( True ) { } while ( False ) { read ( X1 ) } if ( False ) { read ( X4 ) } write ( 762 ) X3 = X4 while ( False ) { read ( X3 ) } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 23, Best fitness: -200, Program: write ( False ) while ( ( B3 ) ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } if ( X2 + X2 != X5 + X3 ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } read ( X2 ) while ( True ) { } B1 = X4 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 24, Best fitness: -200, Program: write ( False ) while ( ( B3 ) ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } if ( X2 + X2 != X5 + X3 ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } read ( X2 ) while ( True ) { } B1 = X4 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 25, Best fitness: -200, Program: write ( False ) while ( X2 + X5 < X2 + X5 ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } if ( X2 + X2 != X5 + X3 ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } read ( X1 ) while ( True ) { } B1 = X4 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 26, Best fitness: -200, Program: write ( False ) while ( X2 + X5 < X2 + X5 ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) B1 = X2 + X5 < X2 + X5 } } if ( X2 + X2 != X5 + X3 ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } read ( X4 ) while ( True ) { } B1 = X2 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 27, Best fitness: -200, Program: write ( False ) while ( X2 + X5 < X2 + X5 ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } if ( X2 + X2 != X5 + X3 ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) while ( X2 != X4 + X2 ) { if ( True ) { } read ( X5 ) B3 = True while ( True ) { } X2 = 665 } } } read ( X1 ) while ( ( B3 ) ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } B1 = X4 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 28, Best fitness: -200, Program: write ( X4 + X5 < X2 + X5 ) while ( True ) { } if ( X2 + X2 != X5 + X3 ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } read ( X4 ) while ( X2 + X5 < X2 + X5 ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } B1 = X2 + X5 < X2 + X2 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 29, Best fitness: -200, Program: write ( X4 + X5 < X2 + X5 ) while ( True ) { } if ( X2 + X2 != X5 + X3 ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } read ( X4 ) while ( X2 + X5 < X2 + X5 ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } B1 = X2 + X5 < X2 + X2 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 30, Best fitness: -200, Program: write ( X4 < X2 + X5 ) while ( X2 + X5 < X2 + X5 ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } if ( False ) { while ( ! 871 != 826 ) { X5 = 647 write ( False ) while ( X2 != X4 + X2 ) { if ( True ) { } read ( X5 ) B3 = True while ( True ) { } X2 = 665 } } } read ( X1 ) while ( ( B3 ) ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } B1 = X2 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 31, Best fitness: -200, Program: write ( False ) write ( X4 + X5 < X2 + X5 ) if ( True ) { read ( X2 ) } read ( X4 ) while ( X2 + X5 < X2 + X5 ) { read ( B2 ) read ( X2 ) while ( False ) { read ( X1 ) } } B1 = False , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 32, Best fitness: -200, Program: write ( ! True || B3 ) while ( False ) { read ( X1 ) } if ( True ) { read ( X2 ) } read ( X1 ) while ( False ) { read ( X1 ) } B1 = X2 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 33, Best fitness: -200, Program: write ( ! True || B3 ) while ( ( 174 >= 251 ) ) { } if ( True ) { } write ( 298 ) while ( False ) { read ( X1 ) } B1 = X2 + X5 < X2 + X5 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 34, Best fitness: -200, Program: write ( ! True || B3 ) while ( False ) { write ( False ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( True ) { } read ( X1 ) B1 = ! True X5 = X5 + X3 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 35, Best fitness: -200, Program: write ( ! True || B3 ) while ( False ) { write ( X4 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( True ) { } read ( X1 ) while ( ( B3 ) ) { read ( B2 ) read ( X1 ) while ( False ) { read ( X1 ) } } write ( ! True || B3 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 36, Best fitness: -200, Program: write ( ! True || B3 ) while ( False ) { write ( X4 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( True ) { } read ( X1 ) while ( ( B3 ) ) { read ( B2 ) read ( X1 ) while ( False ) { read ( X1 ) } } write ( ! True || B3 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 37, Best fitness: -200, Program: write ( ! True || B3 ) while ( ( B3 ) ) { read ( B2 ) read ( X1 ) while ( False ) { read ( X1 ) } } if ( True ) { read ( X1 ) } read ( B2 ) while ( False ) { write ( X4 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } write ( ! True || B3 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 38, Best fitness: -200, Program: write ( ! False || False ) while ( False ) { write ( ( 737 ) ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( True ) { } read ( X1 ) while ( ! False || False ) { write ( X4 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } write ( ! True || B3 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 39, Best fitness: -200, Program: write ( False ) while ( ( 587 <= 797 ) ) { read ( B2 ) read ( X1 ) while ( False ) { read ( X1 ) } } while ( True ) { read ( X5 ) read ( X4 ) } read ( X1 ) while ( ( B3 ) ) { read ( B2 ) read ( X1 ) while ( False ) { read ( X1 ) } } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 40, Best fitness: -200, Program: write ( False ) while ( ! 871 != 826 ) { read ( B2 ) read ( X1 ) while ( False ) { read ( X1 ) } } while ( True ) { read ( X5 ) read ( X4 ) } read ( X1 ) while ( ( B3 ) ) { read ( B2 ) read ( X1 ) while ( False ) { read ( X1 ) } } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 41, Best fitness: -200, Program: write ( ! False || False ) while ( False ) { write ( ( 737 ) ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( True ) { } read ( X5 ) while ( False ) { write ( False ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 42, Best fitness: -200, Program: write ( False ) while ( X4 + X3 <= ( 737 ) ) { while ( False ) { write ( False ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( False ) { } if ( True ) { } if ( True ) { } X5 = 990 B1 = True } while ( True ) { read ( B2 ) read ( X4 ) } read ( X1 ) while ( ( B3 ) ) { read ( X1 ) read ( X1 ) while ( False ) { read ( X1 ) } } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 43, Best fitness: -200, Program: write ( False ) while ( False ) { read ( X1 ) } while ( True ) { read ( B2 ) read ( X4 ) } read ( X1 ) while ( False && ! True ) { read ( X5 ) } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 44, Best fitness: -200, Program: write ( False ) while ( True ) { read ( B2 ) read ( X4 ) } while ( True ) { read ( B2 ) read ( X4 ) } read ( X1 ) while ( False ) { write ( False ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 45, Best fitness: -200, Program: write ( False ) while ( False ) { write ( X2 + X5 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } while ( True ) { read ( X5 ) read ( X4 ) } read ( X1 ) while ( ( B3 ) ) { read ( B2 ) write ( 149 ) while ( False ) { read ( X1 ) } } write ( X2 + X5 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 46, Best fitness: -200, Program: write ( False ) while ( True ) { read ( B2 ) read ( X4 ) } while ( True ) { read ( B2 ) read ( X4 ) } read ( X1 ) while ( False ) { write ( False ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 47, Best fitness: -200, Program: write ( X2 + X5 ) while ( X4 + X3 <= ( 737 ) ) { while ( False ) { write ( False ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( False ) { } if ( True ) { } if ( True ) { } X5 = 990 } while ( True ) { B2 = B1 read ( X1 ) read ( X4 ) } read ( X1 ) read ( B2 ) if ( False ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 48, Best fitness: -200, Program: if ( False ) { } while ( False ) { write ( X2 + X5 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } while ( ( B3 ) ) { read ( B2 ) write ( 149 ) while ( False ) { read ( X1 ) } } read ( X1 ) while ( X4 + X3 <= ( 737 ) ) { while ( False ) { write ( False ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } if ( False ) { } if ( True ) { } if ( True ) { } X5 = 990 } write ( ( B3 ) && 992 == 300 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 49, Best fitness: -200, Program: write ( True ) while ( False ) { write ( X2 + X5 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( B2 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 50, Best fitness: -200, Program: write ( True ) while ( False ) { write ( X2 + X5 ) write ( False ) while ( ! 871 != 826 ) { X5 = 647 write ( False ) write ( X4 ) } } while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( B2 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 51, Best fitness: -200, Program: write ( True ) while ( False ) { read ( X5 ) read ( X1 ) } while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( B2 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 52, Best fitness: -200, Program: write ( False ) while ( False ) { read ( X5 ) read ( X1 ) } while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( B2 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 53, Best fitness: -200, Program: write ( 926 ) X1 = 283 while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( X1 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 54, Best fitness: -200, Program: write ( 926 ) X1 = 283 while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( X1 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 55, Best fitness: -200, Program: write ( False ) X1 = 283 while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( X1 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 56, Best fitness: -200, Program: write ( False ) X4 = 976 while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( X1 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 57, Best fitness: -200, Program: write ( False ) X4 = 976 while ( False ) { read ( X5 ) read ( X1 ) } read ( X1 ) read ( X1 ) write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 58, Best fitness: -200, Program: write ( 926 ) while ( ( True ) && True && True ) { } while ( False ) { read ( X5 ) read ( X1 ) } B3 = True X5 = 976 write ( False ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 59, Best fitness: -200, Program: write ( 926 ) while ( ( True ) && True && True ) { } while ( False ) { read ( X5 ) read ( X1 ) } if ( True ) { } X5 = 990 write ( 926 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 60, Best fitness: -200, Program: write ( 926 ) while ( ( True ) && True && True ) { } while ( False ) { read ( X5 ) read ( X1 ) } if ( True ) { } X5 = 990 write ( 926 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
