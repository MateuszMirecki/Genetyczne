Generation: 1, Best fitness: -20, Program: write ( ( True && True ) ) write ( False ) if ( ( ( True ) ) ) { if ( True ) { } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 2, Best fitness: -20, Program: write ( ( True && True ) ) write ( False ) if ( ( ( True ) ) ) { if ( True ) { } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 3, Best fitness: -20, Program: write ( ( True && True ) ) write ( False ) if ( ( ( True ) ) ) { if ( True ) { } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 4, Best fitness: -20, Program: write ( ( True && True ) ) write ( False ) if ( ( ( True ) ) ) { if ( True ) { } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 5, Best fitness: -20, Program: write ( ( True && True ) ) write ( False ) if ( ( ( True ) ) ) { if ( True ) { } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 6, Best fitness: -20, Program: if ( ( True ) ) { if ( False ) { } } read ( X1 ) if ( X3 + X2 < X4 + X2 ) { while ( False ) { read ( X4 ) } } while ( B1 && True || True ) { write ( False ) while ( True ) { } } write ( ( 749 != 823 ) ) , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 7, Best fitness: -20, Program: if ( ( True ) ) { if ( False ) { } } read ( X1 ) if ( X3 + X2 < X4 + X2 ) { while ( False ) { read ( X4 ) } } while ( B1 && True || True ) { write ( False ) while ( True ) { } } write ( ( 749 != 823 ) ) , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 8, Best fitness: -20, Program: if ( ( True ) ) { if ( False ) { } } read ( X1 ) if ( X3 + X2 < X4 + X2 ) { while ( False ) { read ( X4 ) } } while ( B1 && True || True ) { write ( False ) while ( True ) { } } write ( ( 749 != 823 ) ) , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 9, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 10, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 11, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 12, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 13, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 14, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 15, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 16, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 17, Best fitness: -20, Program: write ( False || True && ( True ) ) while ( True ) { while ( True ) { } } write ( ( 855 <= 623 ) ) if ( True ) { if ( True ) { read ( X2 ) } } if ( ! ! True ) { while ( True ) { read ( X1 ) } } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 18, Best fitness: -20, Program: if ( 112 != X4 ) { X3 = 254 } write ( ! False ) write ( X5 + X5 ) while ( ( False && True ) ) { if ( True ) { read ( X2 ) } } read ( X5 ) , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 19, Best fitness: -20, Program: if ( 112 != X4 ) { X3 = 254 } write ( ! False ) write ( X5 + X5 ) while ( ( False && True ) ) { if ( True ) { read ( X2 ) } } read ( X5 ) , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 20, Best fitness: -20, Program: write ( True ) write ( X4 + X1 ) while ( ( ( True ) ) ) { B3 = False } X2 = - X3 read ( X2 ) , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 21, Best fitness: -20, Program: write ( True ) write ( X4 + X1 ) while ( ( ( True ) ) ) { B3 = False } X2 = - X3 read ( X2 ) , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 22, Best fitness: -20, Program: write ( ! True ) read ( X4 ) write ( ( - 396 ) ) if ( ( B1 ) ) { if ( True ) { read ( X4 ) } } while ( False ) { } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 23, Best fitness: -20, Program: write ( ! True ) read ( X4 ) write ( ( - 396 ) ) if ( ( B1 ) ) { if ( True ) { read ( X4 ) } } while ( False ) { } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 24, Best fitness: -20, Program: write ( ! True ) read ( X4 ) write ( ( - 396 ) ) if ( ( B1 ) ) { if ( True ) { read ( X4 ) } } while ( False ) { } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 25, Best fitness: -20, Program: write ( ! True ) read ( X4 ) write ( ( - 396 ) ) if ( ( B1 ) ) { if ( True ) { read ( X4 ) } } while ( False ) { } , Population size: 300, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
