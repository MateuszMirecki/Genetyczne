Generation: 1, Best fitness: -1000, Program: while ( False ) { write ( True ) write ( True ) while ( True ) { } read ( X4 ) } if ( B3 || 576 >= 539 ) { while ( True ) { } } while ( True ) { read ( X2 ) read ( X2 ) while ( False ) { read ( X3 ) } X3 = 860 read ( X2 ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 2, Best fitness: -1000, Program: read ( X3 ) read ( X1 ) B3 = ! ( True ) while ( X3 + X5 != 732 ) { } X1 = ( ( 877 ) ) while ( ( True ) || ! False ) { B3 = True X2 = 960 write ( 517 ) write ( False ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 3, Best fitness: -1000, Program: while ( ( True || True ) ) { while ( True ) { read ( X4 ) } } read ( X1 ) B3 = False while ( X3 + X5 != 732 ) { } X1 = ( ( 877 ) ) while ( ( B3 ) ) { B3 = False read ( X3 ) if ( False ) { } read ( X5 ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 4, Best fitness: -1000, Program: while ( ( True || True ) ) { while ( True ) { read ( X4 ) } } read ( X1 ) B3 = ! ( B3 ) while ( X3 + X5 != 732 ) { } X1 = ( ( 877 ) ) while ( ( True || True ) ) { while ( True ) { read ( X4 ) } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 5, Best fitness: -1000, Program: read ( X2 ) read ( X2 ) read ( X4 ) while ( ( True || True ) ) { while ( True ) { read ( X4 ) } } X4 = X5 + X2 while ( ( True ) || ! False ) { B3 = False B3 = B3 write ( 517 ) write ( False ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 6, Best fitness: -1000, Program: read ( X2 ) read ( X1 ) read ( X4 ) while ( ( True || True ) ) { while ( True ) { read ( X4 ) } } X4 = X5 + X2 while ( ( True ) || ! False ) { B3 = False B3 = B3 write ( 517 ) write ( False ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 7, Best fitness: -1000, Program: read ( X2 ) read ( X2 ) read ( X4 ) while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } X4 = - X3 + X5 while ( True ) { B3 = False B3 = B3 write ( 517 ) write ( False ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 8, Best fitness: -1000, Program: read ( X2 ) read ( X1 ) B1 = False while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } X4 = X5 + X2 while ( True ) { B3 = False B3 = B3 write ( 517 ) write ( False ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 9, Best fitness: -1000, Program: read ( X2 ) while ( True ) { read ( X2 ) read ( X2 ) while ( False ) { read ( X3 ) } B3 = B3 read ( X2 ) } B3 = ! True && True X4 = X5 + X2 if ( False ) { B1 = True } if ( False ) { B1 = True } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 10, Best fitness: -1000, Program: read ( X2 ) read ( X2 ) read ( X4 ) while ( ( True || True ) ) { while ( ( True || True ) ) { X4 = X5 + X2 read ( X4 ) } } X4 = X5 + X2 while ( ( True ) || ! False ) { B3 = False B3 = B3 write ( 517 ) write ( False ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 11, Best fitness: -1000, Program: read ( X4 ) if ( B3 ) { if ( True ) { } } if ( False && False || True && True ) { B1 = False } while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } B3 = False while ( ( True ) || ! False ) { B3 = False B3 = B3 write ( 517 ) write ( False ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 12, Best fitness: -1000, Program: read ( X2 ) read ( X2 ) B1 = B1 while ( True ) { X4 = X5 + X2 read ( X2 ) } B1 = False if ( True ) { if ( False ) { } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 13, Best fitness: -1000, Program: read ( X2 ) X4 = X5 + X2 read ( X4 ) while ( B1 ) { B2 = False } X2 = X5 while ( ( True ) || ! False ) { B2 = False } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 14, Best fitness: -1000, Program: read ( X1 ) X4 = X5 + X2 read ( X4 ) while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } B2 = False while ( True ) { X4 = X5 + X2 read ( X4 ) X2 = X5 } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 15, Best fitness: -1000, Program: read ( X4 ) X2 = X5 read ( X2 ) while ( B1 ) { B2 = False } X2 = X5 if ( B3 || ! True ) { write ( 179 ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 16, Best fitness: -1000, Program: read ( X1 ) if ( B1 ) { write ( True ) } read ( X2 ) while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } X2 = X5 while ( B1 ) { B2 = False } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 17, Best fitness: -1000, Program: read ( X1 ) if ( B1 ) { write ( True ) } read ( X4 ) while ( ( True || True ) ) { while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } } X4 = X5 + X2 while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 18, Best fitness: -1000, Program: read ( X4 ) X2 = X5 read ( X1 ) if ( ( B2 ) ) { while ( True ) { } } X4 = X5 + X2 while ( B1 ) { B2 = False } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 19, Best fitness: -1000, Program: read ( X1 ) if ( True || ( True ) ) { while ( False ) { } } read ( X4 ) while ( ( True || True ) ) { while ( ( True || True ) ) { while ( True ) { X4 = X5 + X2 read ( X4 ) } } } B2 = False while ( ( True || True ) ) { while ( B1 ) { B2 = False } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 20, Best fitness: -1000, Program: read ( X4 ) X2 = X1 / X2 read ( X1 ) if ( False ) { while ( True ) { } } X4 = X5 + X2 while ( B1 ) { B2 = False } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 21, Best fitness: -1000, Program: read ( X4 ) X2 = X5 read ( X4 ) while ( B1 ) { B2 = False } X4 = X5 while ( ( True || True ) ) { while ( ! ( True ) ) { read ( X3 ) if ( False ) { } B1 = True } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 22, Best fitness: -1000, Program: read ( X4 ) if ( True || ( True ) ) { while ( False ) { } } read ( X1 ) while ( False ) { } read ( X4 ) while ( ( True || True ) ) { while ( ! ( True ) ) { read ( X3 ) if ( False ) { } B1 = True } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 23, Best fitness: -1000, Program: read ( X4 ) if ( True || ( True ) ) { while ( False ) { } } read ( X1 ) while ( False ) { } read ( X4 ) while ( ( True || True ) ) { while ( ! ( True ) ) { read ( X3 ) if ( False ) { } B1 = True } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 24, Best fitness: -1000, Program: read ( X4 ) if ( False ) { while ( False ) { } } read ( X4 ) if ( True || ( True ) ) { } read ( X4 ) while ( False ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 25, Best fitness: -1000, Program: read ( X4 ) if ( True ) { while ( False ) { } } read ( X1 ) B3 = ( ( False ) ) X4 = X5 + X2 while ( True ) { read ( X1 ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 26, Best fitness: -1000, Program: read ( X4 ) if ( True || False ) { while ( False ) { } } read ( X4 ) B3 = ( ( False ) ) X4 = X5 + X2 X3 = X4 + X2 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 27, Best fitness: -1000, Program: read ( X4 ) if ( ( True ) ) { while ( False ) { } } read ( X4 ) B3 = ( ( False ) ) X4 = X5 + X2 X3 = X4 + X2 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 28, Best fitness: -1000, Program: read ( X4 ) if ( True ) { while ( False ) { } } read ( X4 ) B3 = ( ( False ) ) X4 = X5 + X2 X3 = X5 + X2 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 29, Best fitness: -1000, Program: read ( X4 ) if ( ( ( False ) ) ) { while ( False ) { } } read ( X4 ) if ( True || ( True ) ) { } read ( X4 ) if ( ( True ) ) { while ( False ) { } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 30, Best fitness: -1000, Program: read ( X4 ) if ( ( True ) ) { while ( False ) { } } read ( X4 ) if ( False ) { while ( False ) { } } if ( False ) { while ( False ) { read ( X4 ) } } X2 = 484 , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 31, Best fitness: -1000, Program: read ( X2 ) if ( ( ( False ) ) ) { while ( False ) { } } read ( X4 ) read ( X2 ) X4 = X5 + X2 while ( True ) { read ( X3 ) read ( X2 ) } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 32, Best fitness: -1000, Program: read ( X4 ) if ( ( True ) ) { while ( False ) { } } read ( X4 ) read ( X2 ) X4 = X5 + X2 while ( False ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 33, Best fitness: -1000, Program: read ( X4 ) if ( ( ( False ) ) ) { while ( False ) { } } read ( X1 ) if ( ( True ) ) { while ( False ) { } } read ( X4 ) if ( False ) { while ( False ) { } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 34, Best fitness: -1000, Program: read ( X4 ) if ( ( ( False ) ) ) { while ( False ) { } } read ( X1 ) if ( ( True ) ) { while ( False ) { } } read ( X4 ) if ( False ) { while ( False ) { } } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 35, Best fitness: -1000, Program: read ( X4 ) if ( ( True ) ) { while ( False ) { } } read ( X2 ) read ( X4 ) X4 = X5 + X2 while ( False ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 36, Best fitness: -1000, Program: read ( X4 ) if ( ( True ) ) { while ( False ) { } } read ( X2 ) X1 = X4 X4 = X5 + X2 while ( ( ( False ) ) ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 37, Best fitness: -1000, Program: read ( X2 ) if ( ( True ) ) { if ( True ) { } } read ( X2 ) X1 = X4 B1 = ( True ) while ( ( ( False ) ) ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 38, Best fitness: -1000, Program: read ( X1 ) if ( False ) { while ( False ) { } } read ( X2 ) B1 = ( 893 != X5 + X2 ) X1 = X4 while ( ( ( False ) ) ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 39, Best fitness: -1000, Program: read ( X4 ) if ( ( True ) ) { while ( False ) { } } read ( X2 ) read ( X4 ) X4 = X5 + X2 while ( ( True ) ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 40, Best fitness: -1000, Program: read ( X2 ) if ( ( True ) ) { if ( True ) { } } read ( X2 ) B1 = ( True ) B1 = ( 893 != X5 + X2 ) while ( ( True && True ) ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 41, Best fitness: -1000, Program: read ( X2 ) if ( False ) { while ( False ) { } } read ( X2 ) B1 = ( True ) B1 = ( 893 != X5 + X2 ) while ( ( True && True ) ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 42, Best fitness: -1000, Program: read ( X1 ) while ( True ) { } read ( X2 ) X4 = X5 + X2 X4 = X5 + X2 read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 43, Best fitness: -1000, Program: read ( X1 ) while ( True ) { } read ( X2 ) X4 = X5 + X2 X4 = X5 + X2 read ( X1 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 44, Best fitness: -1000, Program: read ( X1 ) if ( ( True ) ) { B2 = False } read ( X2 ) X3 = 762 X4 = X5 + X2 while ( True ) { } , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 45, Best fitness: -1000, Program: read ( X1 ) while ( True ) { } read ( X1 ) X4 = X5 + X2 while ( False ) { while ( True ) { } while ( True ) { } write ( True ) B3 = True write ( 562 ) if ( ( True ) ) { while ( False ) { } } } read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 46, Best fitness: -1000, Program: read ( X2 ) X3 = X1 read ( X2 ) X5 = X3 + X3 X4 = X5 + X2 read ( X1 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 47, Best fitness: -1000, Program: read ( X1 ) X3 = X1 read ( X2 ) X5 = X3 + X3 X4 = X5 + X2 read ( X1 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 48, Best fitness: -1000, Program: read ( X4 ) while ( False ) { } read ( X2 ) X4 = X5 + X2 X2 = X5 + X2 read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 49, Best fitness: -1000, Program: read ( X4 ) while ( False ) { } read ( X2 ) X4 = X5 + X2 X2 = X5 + X2 read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 50, Best fitness: -1000, Program: read ( X2 ) while ( False ) { } read ( X2 ) read ( X5 ) X2 = X5 + X2 read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 51, Best fitness: -1000, Program: read ( X4 ) if ( True ) { } read ( X2 ) read ( X5 ) X2 = X5 + X2 read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 52, Best fitness: -1000, Program: read ( X2 ) while ( False ) { } read ( X2 ) read ( X2 ) if ( False ) { if ( True ) { } } read ( X1 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 53, Best fitness: -1000, Program: read ( X2 ) while ( False ) { } read ( X1 ) read ( X2 ) if ( True ) { X3 = 856 } read ( X1 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 54, Best fitness: -1000, Program: read ( X2 ) if ( True ) { X3 = 856 } read ( X4 ) X4 = X5 + X2 while ( False ) { X4 = X5 + X2 write ( X5 + X2 ) if ( True ) { } if ( True ) { } write ( 259 ) write ( 897 ) } read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 55, Best fitness: -1000, Program: read ( X2 ) while ( False ) { B3 = False write ( X5 + X2 ) if ( True ) { } if ( True ) { } write ( 259 ) write ( 897 ) } read ( X2 ) read ( X2 ) if ( True ) { X3 = 856 } read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 56, Best fitness: -1000, Program: read ( X2 ) while ( True ) { read ( X2 ) X4 = X5 + X2 while ( True ) { } } read ( X2 ) read ( X4 ) if ( True ) { X3 = 856 } read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 57, Best fitness: -1000, Program: while ( True ) { read ( X2 ) B1 = True while ( False ) { B3 = False write ( X5 + X2 ) if ( True ) { } if ( True ) { } write ( 259 ) write ( 897 ) } } while ( False ) { X4 = X5 + X2 write ( X5 + X2 ) if ( True ) { } if ( True ) { } write ( 259 ) write ( 897 ) } while ( True ) { read ( X2 ) read ( X1 ) while ( True ) { } } X4 = X5 + X2 X4 = X5 + X2 read ( X1 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 58, Best fitness: -1000, Program: read ( X2 ) while ( False ) { B3 = False while ( True ) { read ( X2 ) } if ( True ) { } if ( True ) { } write ( 259 ) write ( 897 ) } read ( X4 ) read ( X2 ) if ( True ) { } read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 59, Best fitness: -1000, Program: while ( False ) { X2 = 646 while ( True ) { } while ( True ) { read ( X5 ) read ( X2 ) } } while ( True ) { read ( X2 ) B1 = True while ( False ) { B3 = False write ( X5 + X2 ) if ( True ) { } if ( True ) { } write ( 259 ) write ( 897 ) } } if ( X3 + X4 < X3 + X1 ) { write ( True ) } X4 = X5 + X2 B1 = True read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
Generation: 60, Best fitness: -1000, Program: read ( X1 ) while ( False ) { X4 = X5 + X2 write ( X5 + X2 ) if ( True ) { } if ( True ) { } write ( 259 ) write ( 897 ) } read ( X4 ) read ( X2 ) B2 = False read ( X2 ) , Population size: 30, Crossover probability: 0.7, Mutation probability: 0.3, Rounds per generation: 50, Tournament size: 3, Depth: 6, Max width: 6, Min numeric value: 0, Max numeric value: 1000
